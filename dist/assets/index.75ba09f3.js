import{d as e,c as n,a as o,w as t,v as a,F as l,o as r,W as s,B as c,r as i,b as d,e as u,f as m,t as p,g as b,h as w}from"./vendor.bdf3c21e.js";!function(e=".",n="__import__"){try{self[n]=new Function("u","return import(u)")}catch(o){const t=new URL(e,location),a=e=>{URL.revokeObjectURL(e.src),e.remove()};self[n]=e=>new Promise(((o,l)=>{const r=new URL(e,t);if(self[n].moduleMap[r])return o(self[n].moduleMap[r]);const s=new Blob([`import * as m from '${r}';`,`${n}.moduleMap['${r}']=m;`],{type:"text/javascript"}),c=Object.assign(document.createElement("script"),{type:"module",src:URL.createObjectURL(s),onerror(){l(new Error(`Failed to import: ${e}`)),a(c)},onload(){o(self[n].moduleMap[r]),a(c)}});document.head.appendChild(c)})),self[n].moduleMap={}}}("assets/");var h=e({name:"CreateDao",props:{},setup:()=>({tokenSymbol:"UCT",tokenName:"Umbrella Corporation Token",shareSymbol:"UCS",shareName:"Umbrella Corporation Share"})});const f={class:"mx-auto text-start",style:{"max-width":"400px"}},k={class:"mb-3"},y=o("label",{for:"inputSymbol",class:"form-label"},"Token Symbol",-1),v={class:"mb-3"},S=o("label",{for:"inputName",class:"form-label"},"Token Name",-1),N={class:"mb-3"},C=o("label",{for:"inputShareSymbol",class:"form-label"},"Staked Token Symbol",-1),g={class:"mb-3"},U=o("label",{for:"inputShareName",class:"form-label"},"Staked Token Name",-1),x=o("button",{class:"btn btn-primary"},"Create DAO!",-1);h.render=function(e,s,c,i,d,u){return r(),n(l,null,[o("form",f,[o("div",k,[y,t(o("input",{type:"text","onUpdate:modelValue":s[1]||(s[1]=n=>e.tokenSymbol=n),class:"form-control",id:"inputSymbol"},null,512),[[a,e.tokenSymbol]])]),o("div",v,[S,t(o("input",{type:"text","onUpdate:modelValue":s[2]||(s[2]=n=>e.tokenName=n),class:"form-control",id:"inputName"},null,512),[[a,e.tokenName]])]),o("div",N,[C,t(o("input",{type:"text","onUpdate:modelValue":s[3]||(s[3]=n=>e.shareSymbol=n),class:"form-control",id:"inputShareSymbol"},null,512),[[a,e.shareSymbol]])]),o("div",g,[U,t(o("input",{type:"text","onUpdate:modelValue":s[4]||(s[4]=n=>e.shareName=n),class:"form-control",id:"inputShareName"},null,512),[[a,e.shareName]])])]),x],64)};const M={name:"Loading...",connected:!1,chainId:0,address:"",block:0,connect:function(){var e;this.connected&&(null==(e=window.ethereum)||e.enable())}};var O=e({name:"Web3",props:{info:{type:Object,required:!0}},setup:e=>{if(window.ethereum){let n=function(e){t(e.chainId)},o=function(n){n&&n.length?e.info.address=n[0]:e.info.address=""},t=function(n){var t,a;e.info.chainId=Number(c.from(n)),e.info.connected=window.ethereum.isConnected(),null==(t=window.provider)||t.off("block"),window.provider=new s(window.ethereum),window.ethereum.request({method:"eth_accounts"}).then(o),null==(a=window.provider)||a.getBlockNumber().then((n=>{var o;e.info.block=n,null==(o=window.provider)||o.on("block",(n=>{e.info.block=n}))}))};window.provider=new s(window.ethereum),window.ethereum.isMetaMask?e.info.name="MetaMask":e.info.name="Other",window.ethereum.autoRefreshOnNetworkChange=!1,window.ethereum.on("accountsChanged",o),window.ethereum.on("chainChanged",t),window.ethereum.on("connect",n),window.ethereum.on("disconnect",(n=>{e.info.connected=!1,e.info.block=0})),e.info.connected=window.ethereum.isConnected(),e.info.connected&&n({chainId:window.ethereum.chainId})}else e.info.name="None";return{}}});O.render=function(e,o,t,a,l,s){return r(),n("div",null,[e.info.connected?e.info.connected&&!e.info.address?i(e.$slots,"connect",{key:1}):i(e.$slots,"default",{key:2}):i(e.$slots,"none",{key:0})])};var D=e({name:"App",components:{Web3:O,CreateDao:h},setup:()=>({web3:d(M)})});const L={class:"text-center"},j=o("img",{alt:"Dictator DAO Logo",src:"assets/logo.3f41d6b2.jpeg",height:"180"},null,-1),A=o("h1",null,"Dictator DAO",-1),I=o("p",null," Dictator DAO is an organization where the token holders democratically elect a 'dictator' to operate the protocol. Whenever the DAO isn't happy, they can simply elect a new 'dictator'. ",-1),R=b(" No web3 provider was found. Please use MetaMask. "),$={class:"table mx-auto text-start",style:{width:"600px"}},T=o("td",null,"Name",-1),_=o("td",null,"Connected",-1),W=o("td",null,"Address",-1),B=o("td",null,"ChainId",-1),V=o("td",null,"Block",-1);D.render=function(e,t,a,l,s,c){const i=u("create-dao"),d=u("Web3");return r(),n("div",L,[j,A,I,o(i),o(d,{info:e.web3},{none:m((()=>[R])),connect:m((()=>[o("button",{class:"btn btn-primary",onClick:t[1]||(t[1]=(...n)=>e.web3.connect&&e.web3.connect(...n))}," Connect Metamask ")])),default:m((()=>[o("table",$,[o("tr",null,[T,o("td",null,p(e.web3.name),1)]),o("tr",null,[_,o("td",null,p(e.web3.connected),1)]),o("tr",null,[W,o("td",null,p(e.web3.address),1)]),o("tr",null,[B,o("td",null,p(e.web3.chainId),1)]),o("tr",null,[V,o("td",null,p(e.web3.block),1)])])])),_:1},8,["info"])])},w(D).mount("#app");
